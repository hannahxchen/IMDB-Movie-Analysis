score_clean$content_rating[score_clean$content_rating=='TV-14']<-NA
score_rating_clean<-score_clean[!is.na(score_clean$content_rating),]
cor_imdb_meta_byRating<-group_by(score_rating_clean,content_rating)%>%summarise(cor_imdb_metascore=cor(imdb_score,metascore))
knitr::kable(cor_imdb_meta_byRating)
score_year<-group_by(score_clean,title_year)%>%summarise(movie_count=n(),imdb_score=mean(imdb_score),metascore=mean(metascore))
knitr::kable(score_year)
library(plotly)
score_year$imdb_score<-score_year$imdb_score*10
plot_ly(score_year, x = ~title_year, y = ~imdb_score, type = 'scatter', mode='line', name = 'imdb_score') %>%
add_trace(y = ~metascore, name = 'metascore') %>%
layout(yaxis = list(title = 'Score'))
movie_content_rating<- movie_metadata[which(movie_metadata$content_rating== "NC-17"
| movie_metadata$content_rating == "R"
| movie_metadata$content_rating == "PG-13"
| movie_metadata$content_rating == "PG"
| movie_metadata$content_rating == "G"), ]
plot_ly(movie_content_rating, y = ~content_rating, x = ~imdb_score,
type = "box", orientation = "h")
movie_content_rating2<- score_clean[which(score_clean$content_rating== "NC-17"
| score_clean$content_rating == "R"
| score_clean$content_rating == "PG-13"
| score_clean$content_rating == "PG"
| score_clean$content_rating == "G"), ]
plot_ly(movie_content_rating2, y = ~content_rating, x = ~metascore,
type = "box", orientation = "h")
temp<-movie_metadata%>%select(director_name,imdb_score)
temp <-temp %>% group_by(director_name) %>% summarise(imdb_avg=mean(imdb_score))
temp <- temp %>% arrange(desc(imdb_avg))
temp <- temp[1:20,]
library(formattable)
temp %>% formattable(list(imdb_avg = color_bar("orange")), align = 'l')
temp<-score_clean%>%select(director_name,metascore)
temp <-temp %>% group_by(director_name) %>% summarise(metascore_avg=mean(metascore))
temp <- temp %>% arrange(desc(metascore_avg))
temp <- temp[1:20,]
library(formattable)
temp %>% formattable(list(metascore_avg = color_bar("lightgreen")), align = 'l')
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = FALSE),]
View(keywords_sum)
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
top_keywords<-head(keywords_sum,20)
View(top_keywords)
View(keywords_idx)
View(keywords_sum)
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
top_keywords<-head(keywords_sum,20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
na.omit(keywords_sum)
top_keywords<-keywords_sum%>%select(keywords,sum)%>%head(20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
keywords_sum<-na.omit(keywords_sum)
top_keywords<-head(keywords, 20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
top_keywords<-head(keywords, 20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
library(readr)
movie_metadata_latest3 <- read_csv("~/GitHub/movie_metadata_latest3.csv")
View(movie_metadata_latest3)
movie_metadata<-movie_metadata_latest3[!is.na(movie_metadata_latest3$title_year),]
library(dplyr)
score_clean<-movie_metadata[!is.na(movie_metadata$metascore),]
cor_imdb_meta<-summarise(score_clean,"cor_imdb_metascore"=cor(score_clean$imdb_score,score_clean$metascore))
knitr::kable(cor_imdb_meta)
score_clean$content_rating[score_clean$content_rating=='TV-14']<-NA
score_rating_clean<-score_clean[!is.na(score_clean$content_rating),]
cor_imdb_meta_byRating<-group_by(score_rating_clean,content_rating)%>%summarise(cor_imdb_metascore=cor(imdb_score,metascore))
knitr::kable(cor_imdb_meta_byRating)
score_year<-group_by(score_clean,title_year)%>%summarise(movie_count=n(),imdb_score=mean(imdb_score),metascore=mean(metascore))
knitr::kable(score_year)
library(plotly)
score_year$imdb_score<-score_year$imdb_score*10
plot_ly(score_year, x = ~title_year, y = ~imdb_score, type = 'scatter', mode='line', name = 'imdb_score') %>%
add_trace(y = ~metascore, name = 'metascore') %>%
layout(yaxis = list(title = 'Score'))
movie_content_rating<- movie_metadata[which(movie_metadata$content_rating== "NC-17"
| movie_metadata$content_rating == "R"
| movie_metadata$content_rating == "PG-13"
| movie_metadata$content_rating == "PG"
| movie_metadata$content_rating == "G"), ]
plot_ly(movie_content_rating, y = ~content_rating, x = ~imdb_score,
type = "box", orientation = "h")
movie_content_rating2<- score_clean[which(score_clean$content_rating== "NC-17"
| score_clean$content_rating == "R"
| score_clean$content_rating == "PG-13"
| score_clean$content_rating == "PG"
| score_clean$content_rating == "G"), ]
plot_ly(movie_content_rating2, y = ~content_rating, x = ~metascore,
type = "box", orientation = "h")
temp<-movie_metadata%>%select(director_name,imdb_score)
temp <-temp %>% group_by(director_name) %>% summarise(imdb_avg=mean(imdb_score))
temp <- temp %>% arrange(desc(imdb_avg))
temp <- head(temp,20)
library(formattable)
temp %>% formattable(list(imdb_avg = color_bar("orange")), align = 'l')
temp<-score_clean%>%select(director_name,metascore)
temp <-temp %>% group_by(director_name) %>% summarise(metascore_avg=mean(metascore))
temp <- temp %>% arrange(desc(metascore_avg))
temp <- head(temp,20)
temp %>% formattable(list(metascore_avg = color_bar("lightgreen")), align = 'l')
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
keywords_sum<-na.omit(keywords_sum)
top_keywords<-head(keywords, 20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
keywords_sum<-na.omit(keywords_sum)
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
keywords_sum<-na.omit(keywords_sum)
top_keywords<-head(keywords_sum, 20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
temp<-movie_metadata%>%select(cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~cast_total_facebook_likes, y = ~gross, type = 'scatter', mode='marker', name = 'gross'))
temp<-movie_metadata%>%select(cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~cast_total_facebook_likes, y = ~gross, type = 'scatter', mode='marker', name = 'gross')
temp<-movie_metadata%>%select(cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker')
temp<-movie_metadata%>%select(movie_title,cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text=~movie_title)
temp<-movie_metadata%>%select(movie_title,cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text = ~paste('Movie title: ', movie_title))
temp<-movie_metadata%>%select(movie_title,cast_total_facebook_likes,gross,imdb_score,metascore)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker')
View(temp)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
View(temp)
temp$movie_title<-sub("<U+00A0>", "", temp$movie_title)
View(temp)
temp$movie_title<-gsub("<U+00A0>", "", temp$movie_title)
View(temp)
library(readr)
movie_metadata_latest3 <- read_csv("~/GitHub/movie_metadata_latest3.csv",locale = locale(encoding = "ASCII"))
View(movie_metadata_latest3)
movie_metadata<-movie_metadata_latest3[!is.na(movie_metadata_latest3$title_year),]
library(dplyr)
score_clean<-movie_metadata[!is.na(movie_metadata$metascore),]
cor_imdb_meta<-summarise(score_clean,"cor_imdb_metascore"=cor(score_clean$imdb_score,score_clean$metascore))
knitr::kable(cor_imdb_meta)
score_clean$content_rating[score_clean$content_rating=='TV-14']<-NA
score_rating_clean<-score_clean[!is.na(score_clean$content_rating),]
cor_imdb_meta_byRating<-group_by(score_rating_clean,content_rating)%>%summarise(cor_imdb_metascore=cor(imdb_score,metascore))
knitr::kable(cor_imdb_meta_byRating)
score_year<-group_by(score_clean,title_year)%>%summarise(movie_count=n(),imdb_score=mean(imdb_score),metascore=mean(metascore))
knitr::kable(score_year)
library(plotly)
score_year$imdb_score<-score_year$imdb_score*10
plot_ly(score_year, x = ~title_year, y = ~imdb_score, type = 'scatter', mode='line', name = 'imdb_score') %>%
add_trace(y = ~metascore, name = 'metascore') %>%
layout(yaxis = list(title = 'Score'))
movie_content_rating<- movie_metadata[which(movie_metadata$content_rating== "NC-17"
| movie_metadata$content_rating == "R"
| movie_metadata$content_rating == "PG-13"
| movie_metadata$content_rating == "PG"
| movie_metadata$content_rating == "G"), ]
plot_ly(movie_content_rating, y = ~content_rating, x = ~imdb_score,
type = "box", orientation = "h")
movie_content_rating2<- score_clean[which(score_clean$content_rating== "NC-17"
| score_clean$content_rating == "R"
| score_clean$content_rating == "PG-13"
| score_clean$content_rating == "PG"
| score_clean$content_rating == "G"), ]
plot_ly(movie_content_rating2, y = ~content_rating, x = ~metascore,
type = "box", orientation = "h")
temp<-movie_metadata%>%select(director_name,imdb_score)
temp <-temp %>% group_by(director_name) %>% summarise(imdb_avg=mean(imdb_score))
temp <- temp %>% arrange(desc(imdb_avg))
temp <- head(temp,20)
library(formattable)
temp %>% formattable(list(imdb_avg = color_bar("orange")), align = 'l')
temp<-score_clean%>%select(director_name,metascore)
temp <-temp %>% group_by(director_name) %>% summarise(metascore_avg=mean(metascore))
temp <- temp %>% arrange(desc(metascore_avg))
temp <- head(temp,20)
temp %>% formattable(list(metascore_avg = color_bar("lightgreen")), align = 'l')
temp<-movie_metadata%>%select(movie_title,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text = ~movie_title)
temp<-movie_metadata%>%select(movie_title,gross,imdb_score,metascore,plot_keywords)
movies0<-temp[temp$plot_keywords!="",]
keywords<-c()
i<-1
for(n in movies0$plot_keywords){
k<-strsplit(n,"[|]")
if(length(k)!=0){
for(word in k[[1]]){
if(!(word%in%keywords)){
keywords[i]<-word
i=i+1
}
}
}
}
movies0$plot_keywords <- strsplit(movies0$plot_keywords, "[|]")
keywords_idx <- movies0%>%select(movie_title,plot_keywords)
i = 1
mat<- matrix(rep(0, (dim(movies0)[1] * length(keywords))), nrow = dim(movies0)[1])
for (word in keywords_idx$plot_keywords){
idx <- which(keywords %in% word)
mat[i, idx] <- 1
i = i + 1
}
colnames(mat) <- keywords
movies_and_keywords <- data.frame(mat)
sum <- rep(0, length(keywords))
for (i in 1:length(keywords)){
sum[i] <- sum(movies_and_keywords[, i])
}
keywords_sum <- data.frame(keywords = factor(keywords), sum = sum)
keywords_sum <- keywords_sum[order(sum, decreasing = TRUE),]
keywords_sum<-na.omit(keywords_sum)
top_keywords<-head(keywords_sum, 20)
top_keywords%>% formattable(list(sum = color_bar("lightblue")), align = 'l')
temp<-movie_metadata%>%select(movie_title,title_year,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text =~paste('Movie title: '=movie_title, 'Year:'=title_year))
temp<-movie_metadata%>%select(movie_title,title_year,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text =~paste('Movie title: ',movie_title, 'Year:',title_year))
temp<-movie_metadata%>%select(movie_title,title_year,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text =~paste('Movie title: ',movie_title, '<br/>Year: ',title_year))
temp<-movie_metadata%>%select(movie_title,title_year,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text =~paste('Movie title: ',movie_title, '</br>Year: ',title_year))
temp<-movie_metadata%>%select(movie_title,title_year,cast_total_facebook_likes,gross,imdb_score,metascore)
temp$movie_title<-sub("^\\s*<U\\+\\w+>\\s*", "", temp$movie_title)
plot_ly(temp, x = ~gross, y = ~cast_total_facebook_likes, type = 'scatter', mode='marker', text =~paste(movie_title,title_year))
temp<-movie_metadata%>%select(title_year,gross)
plot_ly(temp, x = ~title_year, y = ~gross, type = 'scatter', mode='line') %>% layout(yaxis = list(title = 'Gross'))
temp<-movie_metadata%>%select(title_year,gross)
avg_gross_year<-group_by(temp,title_year)%>%summarise("avg_gross"=mean(gross))
plot_ly(avg_gross_year, x = ~title_year, y = ~avg_gross, type = 'scatter', mode='line') %>% layout(yaxis = list(title = 'Gross'))
View(avg_gross_year)
temp<-movie_metadata%>%select(title_year,gross)
temp<-na.omit(temp)
avg_gross_year<-group_by(temp,title_year)%>%summarise("avg_gross"=mean(gross))
plot_ly(avg_gross_year, x = ~title_year, y = ~avg_gross, type = 'scatter', mode='line') %>% layout(yaxis = list(title = 'Gross'))
movie_metadata_latest3 <- read_csv("~/GitHub/movie_metadata_latest3.csv", locale = locale(encoding = "ASCII"))
movie_metadata<-movie_metadata_latest3[!is.na(movie_metadata_latest3$title_year),]
library(dplyr)
score_clean<-movie_metadata[!is.na(movie_metadata$metascore),]
cor_imdb_meta<-summarise(score_clean,"cor_imdb_metascore"=cor(score_clean$imdb_score,score_clean$metascore))
knitr::kable(cor_imdb_meta)
library(readr)
movie_metadata_latest3 <- read_csv("~/GitHub/movie_metadata_latest3.csv", locale = locale(encoding = "ASCII"))
movie_metadata<-movie_metadata_latest3[!is.na(movie_metadata_latest3$title_year),]
library(dplyr)
score_clean<-movie_metadata[!is.na(movie_metadata$metascore),]
cor_imdb_meta<-summarise(score_clean,"cor_imdb_metascore"=cor(score_clean$imdb_score,score_clean$metascore))
knitr::kable(cor_imdb_meta)
tmp<-movie_metadata%>%select(movie_title,title_year,budget,gross,content_rating,plot_keywords,imdb_score,metascore,director_name,director_facebook_likes,actor_1_name,actor_2_name,actor_3_name,cast_total_facebook_likes)
View(tmp)
movies_and_keywords<-cbind(gross = movies0$gross, imdb_score = movies0$imdb_score, metascore=movies0$metascore, movies_and_keywords, stringsAsFactors = FALSE)
movies_and_keywords <- melt(movies_and_keywords, id = c("gross", "imdb_score","metascore"))
library(reshape2)
movies_and_keywords<-cbind(gross = movies0$gross, imdb_score = movies0$imdb_score, metascore=movies0$metascore, movies_and_keywords, stringsAsFactors = FALSE)
movies_and_keywords <- melt(movies_and_keywords, id = c("gross", "imdb_score","metascore"))
movies_and_keywords$variable <- gsub("[.]", " ", movies_and_keywords$variable)
View(movies_and_keywords)
print("test")
library(reshape2)
movies_and_keywords<-cbind(gross = movies0$gross, imdb_score = movies0$imdb_score, metascore=movies0$metascore, movies_and_keywords, stringsAsFactors = FALSE)
movies_and_keywords <- melt(movies_and_keywords, id = c("gross", "imdb_score","metascore"))
movies_and_keywords$variable <- gsub("[.]", " ", movies_and_keywords$variable)
