library(readr)
movie_metadata <- read_csv("~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata.csv")
movie_metadata<-na.omit(movie_metadata)
library(readr)
movie_metadata <- read_csv("~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata.csv")
View(movie_metadata)
library(rvest)
imdb_rating<-c()
imdb_ratingCount<-c()
num_user_reviews<-c()
num_critic_reviews<-c()
metascore_rating<-c()
for(i in 1:3752){
movie<-read_html(movie_metadata$movie_imdb_link[i])
imdb_rating[[i]]<-movie%>%html_nodes("strong span")%>%html_text()%>%as.numeric()
imdb_ratingCount[i]<-movie%>%html_nodes(".imdbRating")%>%html_nodes(".small")%>%html_text()
if(grepl(",",imdb_ratingCount[i])){
imdb_ratingCount[[i]]<-gsub(",","",imdb_ratingCount[i])
}
if(grepl("metacritic",movie%>%html_nodes("#title-overview-widget")%>%html_text())){
metascore_rating[[i]]<-movie%>%html_nodes("#title-overview-widget")%>%html_node(".metacriticScore")%>%html_text()%>%as.numeric()
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[4]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[5]
}
else{
metascore_rating[[i]]<-NA
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[1]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[2]
}
num_user_reviews[[i]]<-gsub(' user',"",num_user_reviews[i])
if(grepl(",",num_user_reviews[i])){
num_user_reviews[[i]]<-gsub(',',"",num_user_reviews[i])
}
num_critic_reviews[[i]]<-gsub(' critic',"",num_critic_reviews[i])
if(grepl(",",num_critic_reviews[i])){
num_critic_reviews[[i]]<-gsub(',',"",num_critic_reviews[i])
}
}
library(rvest)
imdb_rating<-c()
imdb_ratingCount<-c()
num_user_reviews<-c()
num_critic_reviews<-c()
metascore_rating<-c()
for(i in 1:5043){
movie<-read_html(movie_metadata$movie_imdb_link[i])
imdb_rating[[i]]<-movie%>%html_nodes("strong span")%>%html_text()%>%as.numeric()
imdb_ratingCount[i]<-movie%>%html_nodes(".imdbRating")%>%html_nodes(".small")%>%html_text()
if(grepl(",",imdb_ratingCount[i])){
imdb_ratingCount[[i]]<-gsub(",","",imdb_ratingCount[i])
}
if(grepl("metacritic",movie%>%html_nodes("#title-overview-widget")%>%html_text())){
metascore_rating[[i]]<-movie%>%html_nodes("#title-overview-widget")%>%html_node(".metacriticScore")%>%html_text()%>%as.numeric()
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[4]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[5]
}
else{
metascore_rating[[i]]<-NA
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[1]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[2]
}
num_user_reviews[[i]]<-gsub(' user',"",num_user_reviews[i])
if(grepl(",",num_user_reviews[i])){
num_user_reviews[[i]]<-gsub(',',"",num_user_reviews[i])
}
num_critic_reviews[[i]]<-gsub(' critic',"",num_critic_reviews[i])
if(grepl(",",num_critic_reviews[i])){
num_critic_reviews[[i]]<-gsub(',',"",num_critic_reviews[i])
}
}
library(rvest)
imdb_rating<-c()
imdb_ratingCount<-c()
num_user_reviews<-c()
num_critic_reviews<-c()
metascore_rating<-c()
for(i in 1281:5043){
movie<-read_html(movie_metadata$movie_imdb_link[i])
imdb_rating[[i]]<-movie%>%html_nodes("strong span")%>%html_text()%>%as.numeric()
imdb_ratingCount[i]<-movie%>%html_nodes(".imdbRating")%>%html_nodes(".small")%>%html_text()
if(grepl(",",imdb_ratingCount[i])){
imdb_ratingCount[[i]]<-gsub(",","",imdb_ratingCount[i])
}
if(grepl("metacritic",movie%>%html_nodes("#title-overview-widget")%>%html_text())){
metascore_rating[[i]]<-movie%>%html_nodes("#title-overview-widget")%>%html_node(".metacriticScore")%>%html_text()%>%as.numeric()
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[4]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[5]
}
else{
metascore_rating[[i]]<-NA
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[1]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[2]
}
num_user_reviews[[i]]<-gsub(' user',"",num_user_reviews[i])
if(grepl(",",num_user_reviews[i])){
num_user_reviews[[i]]<-gsub(',',"",num_user_reviews[i])
}
num_critic_reviews[[i]]<-gsub(' critic',"",num_critic_reviews[i])
if(grepl(",",num_critic_reviews[i])){
num_critic_reviews[[i]]<-gsub(',',"",num_critic_reviews[i])
}
}
imdb_rating
library(rvest)
imdb_rating<-c()
imdb_ratingCount<-c()
num_user_reviews<-c()
num_critic_reviews<-c()
metascore_rating<-c()
for(i in 1:5043){
movie<-read_html(movie_metadata$movie_imdb_link[i])
imdb_rating[[i]]<-movie%>%html_nodes("strong span")%>%html_text()%>%as.numeric()
imdb_ratingCount[i]<-movie%>%html_nodes(".imdbRating")%>%html_nodes(".small")%>%html_text()
if(grepl(",",imdb_ratingCount[i])){
imdb_ratingCount[[i]]<-gsub(",","",imdb_ratingCount[i])
}
if(grepl("metacritic",movie%>%html_nodes("#title-overview-widget")%>%html_text())){
metascore_rating[[i]]<-movie%>%html_nodes("#title-overview-widget")%>%html_node(".metacriticScore")%>%html_text()%>%as.numeric()
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[4]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[5]
}
else{
metascore_rating[[i]]<-NA
u<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_user_reviews[[i]]<-u[1]
c<-movie%>%html_nodes(".titleReviewBarItem")%>%html_nodes("a")%>%html_text()
num_critic_reviews[[i]]<-c[2]
}
num_user_reviews[[i]]<-gsub(' user',"",num_user_reviews[i])
if(grepl(",",num_user_reviews[i])){
num_user_reviews[[i]]<-gsub(',',"",num_user_reviews[i])
}
num_critic_reviews[[i]]<-gsub(' critic',"",num_critic_reviews[i])
if(grepl(",",num_critic_reviews[i])){
num_critic_reviews[[i]]<-gsub(',',"",num_critic_reviews[i])
}
}
movie_metadata$imdb_score<-imdb_rating
movie_metadata$num_voted_users<-as.numeric(imdb_ratingCount)
movie_metadata$num_critic_for_reviews<-as.numeric(num_critic_reviews)
movie_metadata$num_user_for_reviews<-as.numeric(num_user_reviews)
movie_metadata$metascore<-as.numeric(metascore_rating)
movie_metadata<-movie_metadata[ , !(names(movie_metadata) %in% "aspect_ratio")]
write.csv(movie_metadata, file = "~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata_latest2.csv")
View(movie_metadata)
movie_metadata$content_rating[movie_metadata$content_rating == "X"] <- "NC-17"
movie_metadata$content_rating[movie_metadata$content_rating == "GP"] <- "PG"
movie_metadata$content_rating[movie_metadata$content_rating == "M"] <- "PG"
movie_metadata$content_rating[movie_metadata$content_rating == "Not Rated"] <- NA
movie_metadata$content_rating[movie_metadata$content_rating == "Unrated"] <- NA
movie_metadata$content_rating[movie_metadata$content_rating == "Passed"] <- NA
movie_metadata$content_rating[movie_metadata$content_rating == "Approved"] <- NA
write.csv(movie_metadata, file = "~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata_latest3.csv")
library(plotly)
temp<-movie_metadata %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
library(dplyr)
cor_money<-summarise(movie_metadata,"cor_budget"=cor(movie_metadata$imdb_score,movie_metadata$budget),"cor_gross"=cor(movie_metadata$imdb_score,movie_metadata$gross))
cor_likes<-summarise(movie_metadata,"cor_movie_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$movie_facebook_likes), "cor_director_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$director_facebook_likes),"cor_cast_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$cast_total_facebook_likes))
knitr::kable(data.frame(cor_money))
knitr::kable(data.frame(cor_likes))
data.frame(cor_money)
data.frame(cor_likes)
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
View(movie_metadata_clean)
library(plotly)
temp<-movie_metadata %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata_clean$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata_clean$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata_clean$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
movie_metadata_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$imdb_score),]
movie_metadata_clean<-movie_metadata[!is.na(movie_metadata$title_year),]
library(plotly)
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
library(plotly)
library(dplyr)
cor_money<-summarise(movie_metadata_clean,"cor_budget"=cor(movie_metadata$imdb_score,movie_metadata$budget),"cor_gross"=cor(movie_metadata$imdb_score,movie_metadata$gross))
cor_likes<-summarise(movie_metadata,"cor_movie_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$movie_facebook_likes), "cor_director_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$director_facebook_likes),"cor_cast_facebook_likes"=cor(movie_metadata$imdb_score,movie_metadata$cast_total_facebook_likes))
knitr::kable(data.frame(cor_money))
knitr::kable(data.frame(cor_likes))
data.frame(cor_likes)
data.frame(cor_money)
library(dplyr)
cor_money<-summarise(movie_metadata_clean,"cor_budget"=cor(movie_metadata_clean[!is.na(movie_metadata$budget),]$imdb_score,movie_metadata_clean[!is.na(movie_metadata$budget),]$budget),"cor_gross"=cor(movie_metadata_clean[!is.na(movie_metadata$gross),]$imdb_score,movie_metadata_clean[!is.na(movie_metadata$gross),]$gross))
library(dplyr)
budget_clean<-movie_metadata_clean[!is.na(movie_metadata$budget),]
cor_budget<-cor(budget_clean$imdb_score,budget_clean$budget)
gross_clean<-movie_metadata_clean[!is.na(movie_metadata$gross),]
cor_gross<-cor(gross_clean$imdb_score,gross_clean$gross)
cor_money<-summarise(movie_metadata,"cor_budget"=cor_budget,"cor_gross"=cor_gross)
movieFB_clean<-movie_metadata_clean[!is.na(movie_metadata$movie_facebook_likes),]
cor_movie_facebook_likes<-cor(movieFB_clean$imdb_score,movieFB_clean$movie_facebook_likes)
directorFB_clean<-movie_metadata_clean[!is.na(movie_metadata$director_facebook_likes),]
cor_director_facebook_likes<-cor(directorFB_clean$imdb_score,directorFB_clean$director_facebook_likes)
castFB_clean<-movie_metadata_clean[!is.na(movie_metadata$cast_total_facebook_likes),]
cor_cast_facebook_likes<-cor(castFB_clean$imdb_score,castFB_clean$cast_total_facebook_likes)
cor_likes<-summarise(movie_metadata,"cor_movie_facebook_likes"=cor_movie_facebook_likes, "cor_director_facebook_likes"=cor_director_facebook_likes,"cor_cast_facebook_likes"=cor_cast_facebook_likes)
knitr::kable(data.frame(cor_money))
knitr::kable(data.frame(cor_likes))
cor_money
data.frame(cor_likes)
cor_budget
budget_clean$budget
library(dplyr)
budget_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$budget),]
cor_budget<-cor(budget_clean$imdb_score,budget_clean$budget)
gross_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$gross),]
cor_gross<-cor(gross_clean$imdb_score,gross_clean$gross)
cor_money<-summarise(movie_metadata,"cor_budget"=cor_budget,"cor_gross"=cor_gross)
movieFB_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$movie_facebook_likes),]
cor_movie_facebook_likes<-cor(movieFB_clean$imdb_score,movieFB_clean$movie_facebook_likes)
directorFB_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$director_facebook_likes),]
cor_director_facebook_likes<-cor(directorFB_clean$imdb_score,directorFB_clean$director_facebook_likes)
castFB_clean<-movie_metadata_clean[!is.na(movie_metadata_clean$cast_total_facebook_likes),]
cor_cast_facebook_likes<-cor(castFB_clean$imdb_score,castFB_clean$cast_total_facebook_likes)
cor_likes<-summarise(movie_metadata,"cor_movie_facebook_likes"=cor_movie_facebook_likes, "cor_director_facebook_likes"=cor_director_facebook_likes,"cor_cast_facebook_likes"=cor_cast_facebook_likes)
knitr::kable(data.frame(cor_money))
knitr::kable(data.frame(cor_likes))
knitr::kable(data.frame(cor_likes))
knitr::kable(data.frame(cor_money))
data.frame(cor_money)
content_rating_total<-table(movie_metadata$content_rating)
content_rating_total<-content_rating_total[c(1,3,4,5,2)]
knitr::kable(t(as.matrix(content_rating_total)))
content_rating_total
content_rating_total<-table(movie_metadata_clean$content_rating)
content_rating_total<-content_rating_total[c(1,3,4,5,2)]
knitr::kable(t(as.matrix(content_rating_total)))
knitr::kable(t(as.matrix(content_rating_total)))
library(tidyr)
content_rating_year<-na.omit(movie_metadata_clean)%>%group_by(title_year,content_rating)%>%summarise(n_content_rating=n())
content_rating_year2<-spread(content_rating_year,content_rating,n_content_rating)
content_rating_year2[is.na(content_rating_year2)]<-0
export(plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='line', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') ))
library(plotly)
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
content_rating_year<-na.omit(movie_metadata_clean)%>%group_by(title_year,content_rating)%>%summarise(n_content_rating=n())
content_rating_year
content_rating_year2
library(tidyr)
content_rating_year<-na.omit(movie_metadata_clean)%>%group_by(title_year,content_rating)%>%summarise(n_content_rating=n())
content_rating_year2<-spread(content_rating_year,content_rating,n_content_rating)
content_rating_year2[is.na(content_rating_year2)]<-0
export(plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='lines+markers', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') ))
library(plotly)
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines+markers')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
movie_metadata$imdb_score<-imdb_rating
movie_metadata$num_voted_users<-as.numeric(imdb_ratingCount)
movie_metadata$num_critic_for_reviews<-as.numeric(num_critic_reviews)
movie_metadata$num_user_for_reviews<-as.numeric(num_user_reviews)
movie_metadata$metascore<-as.numeric(metascore_rating)
movie_metadata<-movie_metadata[ , !(names(movie_metadata) %in% "aspect_ratio")]
View(movie_metadata_clean)
View(content_rating_year)
content_rating_year2<-spread(content_rating_year,content_rating,n_content_rating)
View(content_rating_year2)
library(tidyr)
content_rating_year<-na.omit(movie_metadata_clean)%>%group_by(title_year,content_rating)%>%summarise(n_content_rating=n())
content_rating_year2<-spread(content_rating_year,content_rating,n_content_rating)
content_rating_year2[is.na(content_rating_year2)]<-0
export(plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='lines+markers', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') ))
library(plotly)
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines+markers')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
library(plotly)
temp<-movie_metadata_clean %>% select(movie_title,title_year)
p<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')
export(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE))
p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = "Movies per Year",showlegend = FALSE)
plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='lines', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') ))
plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='lines', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') )
plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='line', name = 'G') %>%
add_trace(y = ~PG, name = 'PG') %>%
add_trace(y= ~`PG-13`, name='PG-13')%>%
add_trace(y= ~R, name='R')%>%
add_trace(y= ~`NC-17`, name='NC-17')%>%
layout(yaxis = list(title = 'Count') )
View(cor_likes)
knitr::kable(data.frame(cor_money))
knitr::kable(cor_money)
knitr::kable(cor_likes)
knitr::kable(content_rating_total)
knitr::kable(t(as.matrix(content_rating_total)))
knitr::kable(t(cor_money)
knitr::kable(t(cor_money))
knitr::kable(cor_money)
knitr::kable(cor_likes)
