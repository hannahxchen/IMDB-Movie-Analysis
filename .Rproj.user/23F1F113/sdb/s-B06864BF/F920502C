{
    "collab_server" : "",
    "contents" : "---\ntitle: \"IMDB Movie Analysis\"\noutput: github_document\n---\n\n##組員\n陳玉菡\n\n## 分析議題背景\n現在的電影越出越多，出續集的速度也非常的快，常常續集每隔一年就能產出。有些電影會以強大的演員卡司陣容，或強大的特效技術等，來吸引更多的消費者願意掏錢去電影院觀看。\nIMDB、Metacritic、Rotten Tomato，皆為國外廣為人知的電影資訊與評論網站，但是其性質及使用客群並不相同。IMDB大多皆為一般網民評分，較少專業影評人評分；Metacritic的評分則是以一群專業影評人給分的加權平均數計算；Rotten Tomato則介於兩者之間，大量採用了各大報章雜誌的評論, 不論是頂尖的專業影評或是路邊小報非專業人士的影評, 都被拿來作為平均計分的標準，以Tomatometer反映喜歡某指定影片的人的百分比。\n\n## 分析動機\n想藉由IMDB網站提供的電影資料來分析電影類型及內容的趨勢，IMDB score與電影預算、導演、演員陣容、票房等之間的關係，還有Metascore網站給予的評分與IMDB網站給的評分是否有很大的差異？\n\n## 使用資料\n載入IMDB 5000 movies dataset (source:https://www.kaggle.com/deepmatrix/imdb-5000-movie-dataset)\n並去掉有NA值的整筆電影資料\n```{r}\nlibrary(readr)\nmovie_metadata <- read_csv(\"~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata.csv\")\nmovie_metadata<-na.omit(movie_metadata)\n```\n\n藉由movie_metadata的movie_imdb_link，抓取每筆電影在IMDB網站上的最新IMDB rating、rating的人數、User review的人數、Critic review的人數、Metascore 的分數\n```{r}\nlibrary(rvest)\nimdb_rating<-c()\nimdb_ratingCount<-c()\nnum_user_reviews<-c()\nnum_critic_reviews<-c()\nmetascore_rating<-c()\n\nfor(i in 1:3752){\n  movie<-read_html(movie_metadata$movie_imdb_link[i])\n  imdb_rating[[i]]<-movie%>%html_nodes(\"strong span\")%>%html_text()%>%as.numeric()\n  imdb_ratingCount[i]<-movie%>%html_nodes(\".imdbRating\")%>%html_nodes(\".small\")%>%html_text()\n  if(grepl(\",\",imdb_ratingCount[i])){\n    imdb_ratingCount[[i]]<-gsub(\",\",\"\",imdb_ratingCount[i])\n  }\n  if(grepl(\"metacritic\",movie%>%html_nodes(\"#title-overview-widget\")%>%html_text())){\n    metascore_rating[[i]]<-movie%>%html_nodes(\"#title-overview-widget\")%>%html_node(\".metacriticScore\")%>%html_text()%>%as.numeric()\n    u<-movie%>%html_nodes(\".titleReviewBarItem\")%>%html_nodes(\"a\")%>%html_text()\n  num_user_reviews[[i]]<-u[4]\n  c<-movie%>%html_nodes(\".titleReviewBarItem\")%>%html_nodes(\"a\")%>%html_text()\n  num_critic_reviews[[i]]<-c[5]\n  }\n  else{\n    metascore_rating[[i]]<-NA\n    u<-movie%>%html_nodes(\".titleReviewBarItem\")%>%html_nodes(\"a\")%>%html_text()\n    num_user_reviews[[i]]<-u[1]\n    c<-movie%>%html_nodes(\".titleReviewBarItem\")%>%html_nodes(\"a\")%>%html_text()\n    num_critic_reviews[[i]]<-c[2]\n  }\n  num_user_reviews[[i]]<-gsub(' user',\"\",num_user_reviews[i])\n  if(grepl(\",\",num_user_reviews[i])){\n    num_user_reviews[[i]]<-gsub(',',\"\",num_user_reviews[i])\n  }\n  num_critic_reviews[[i]]<-gsub(' critic',\"\",num_critic_reviews[i])\n  if(grepl(\",\",num_critic_reviews[i])){\n    num_critic_reviews[[i]]<-gsub(',',\"\",num_critic_reviews[i])\n  }\n}\n\n```\n\n## 資料處理與清洗\n將抓取到的資料更新或新增欄位到movie_metadata\ndrop掉aspect_ratio(電影寬高比)欄位\n```{r}\nmovie_metadata$imdb_score<-imdb_rating\nmovie_metadata$num_voted_users<-as.numeric(imdb_ratingCount)\nmovie_metadata$num_critic_for_reviews<-as.numeric(num_critic_reviews)\nmovie_metadata$num_user_for_reviews<-as.numeric(num_user_reviews)\nmovie_metadata$metascore<-as.numeric(metascore_rating)\nmovie_metadata<-movie_metadata[ , !(names(movie_metadata) %in% \"aspect_ratio\")]\nwrite.csv(movie_metadata, file = \"~/GitHub/CGUIM_BigData_HW6-b0322020/movie_metadata_latest.csv\")\n```\n\n清洗content rating，將舊制的分級重新歸類：X rated movie歸類為NC-17，GP和M歸類為PG\n(source: https://en.wikipedia.org/wiki/Motion_Picture_Association_of_America_film_rating_system#From_M_to_GP_to_PG)\n最後將除unrated, not rated, passed, Approved的電影改為NA值\n```{r}\nmovie_metadata$content_rating[movie_metadata$content_rating == \"X\"] <- \"NC-17\"\nmovie_metadata$content_rating[movie_metadata$content_rating == \"GP\"] <- \"PG\"\nmovie_metadata$content_rating[movie_metadata$content_rating == \"M\"] <- \"PG\"\nmovie_metadata$content_rating[movie_metadata$content_rating == \"Not Rated\"] <- NA\nmovie_metadata$content_rating[movie_metadata$content_rating == \"Unrated\"] <- NA\nmovie_metadata$content_rating[movie_metadata$content_rating == \"Passed\"] <- NA\nmovie_metadata$content_rating[movie_metadata$content_rating == \"Approved\"] <- NA\n```\n\n## 探索式資料分析\n在此dataset裡，從每年電影數量趨勢圖中，可以看出2002年的電影數量最多，再來是2006年\n```{r}\nlibrary(plotly)\ntemp<-movie_metadata %>% select(movie_title,title_year)\np<-temp %>% group_by(title_year) %>% summarise(n=n())%>%plot_ly(x = ~title_year, y = ~n, type = 'scatter', mode = 'lines')\nexport(p%>%add_trace( x =~title_year, y = ~fitted(loess(n ~ as.numeric(title_year))))%>%layout(title = \"Movies per Year\",showlegend = FALSE))\n```\n\n分析IMDB Score和電影預算、總收益、電影Facebook 粉絲人數、導演人氣(導演Facebook粉絲人數)、演員陣容人氣(演員Total Facebook粉絲人數)是否有相關性\n由分析結果可看出皆呈現低度正相關，代表他們之間並無存在很大的關聯性\n(-0.3~0.3為低度相關；-0.3~-0.6或0.3~0.6為中度相關；-0.6以下或0.6以上為高度相關)\n```{r}\nlibrary(dplyr)\ncor_money<-summarise(movie_metadata,\"cor_budget\"=cor(movie_metadata$imdb_score,movie_metadata$budget),\"cor_gross\"=cor(movie_metadata$imdb_score,movie_metadata$gross))\ncor_likes<-summarise(movie_metadata,\"cor_movie_facebook_likes\"=cor(movie_metadata$imdb_score,movie_metadata$movie_facebook_likes), \"cor_director_facebook_likes\"=cor(movie_metadata$imdb_score,movie_metadata$director_facebook_likes),\"cor_cast_facebook_likes\"=cor(movie_metadata$imdb_score,movie_metadata$cast_total_facebook_likes))\nknitr::kable(data.frame(cor_money))\nknitr::kable(data.frame(cor_likes))\n```\n\n\n分析電影分級的分布\n(G: General Audience, PG: Parental Guidance Suggested (mainly for under 10's), PG-13: Parental Guidance Suggested for children under 13, R: Under 17 not admitted without parent or guardian, NC-17: Under 17 not admitted)\n從各電影分級的個數的表格中，可以發現R rated movie數量最多\n```{r}\ncontent_rating_total<-table(movie_metadata$content_rating)\ncontent_rating_total<-content_rating_total[c(1,3,4,5,2)]\nknitr::kable(t(as.matrix(content_rating_total)))\n```\n\n由每年各電影分級的趨勢圖可以發現R和PG-13級的電影有大幅上升的趨勢\n```{r}\nlibrary(tidyr)\ncontent_rating_year<-na.omit(movie_metadata)%>%group_by(title_year,content_rating)%>%summarise(n_content_rating=n())\ncontent_rating_year2<-spread(content_rating_year,content_rating,n_content_rating)\ncontent_rating_year2[is.na(content_rating_year2)]<-0\nexport(plot_ly(content_rating_year2, x = ~title_year, y = ~G, type = 'scatter', mode='line', name = 'G') %>%\n    add_trace(y = ~PG, name = 'PG') %>%\n    add_trace(y= ~`PG-13`, name='PG-13')%>%\n    add_trace(y= ~R, name='R')%>%\n    add_trace(y= ~`NC-17`, name='NC-17')%>%\n    layout(yaxis = list(title = 'Count') ))\n```\n\n## 期末專題分析規劃\n1. Metacritic Score 和 IMDB Score 是否有很大的差異性\n2. 分析在電影分級中，哪一分級的IMDB score最高\n3. 哪些導演拍的電影得到的平均IMDB score比較高\n4. 哪些演員所拍的電影是票房保證\n5. 哪些演員所拍的電影平均IMDB score/Metacritic score比較高\n6. 每年的電影平均IMDB Score和Metacritic Score趨勢\n7. 哪種類型和內容的電影越來越多？觀眾是否也買單\n8. 電影總收益有無增加的趨勢\n",
    "created" : 1496985634303.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "427911945",
    "id" : "F920502C",
    "lastKnownWriteTime" : 1496114497,
    "last_content_update" : 1496114497,
    "path" : "~/GitHub/CGUIM_BigData_HW6-b0322020/README.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}